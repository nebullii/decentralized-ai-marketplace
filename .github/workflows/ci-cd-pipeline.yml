name: CI/CD Pipeline for Decentralized AI Marketplace

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull request to 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v1

      # Step 2: Set up Docker Buildx (required for multi-platform support)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Log in to DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Stored Docker username in GitHub secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Stored Docker password in GitHub secrets

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/decentralized-ai-marketplace:latest .

      # Step 5: Push the image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/decentralized-ai-marketplace:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure deployment runs only after build

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v1

      # Step 2: Set up kubectl to interact with Kubernetes
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          kubectl-version: 'v1.24.0'

      # Step 3: Set up Kubernetes config
      - name: Set up Kubernetes config
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}  # Store kubeconfig as GitHub secret
        run: |
          echo "$KUBE_CONFIG" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      # Step 4: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/quantum-trade-deployment.yml  # Make sure your deployment file is in the `k8s` directory
          kubectl set image deployment/decentralized-ai-marketplace decentralized-ai-marketplace=${{ secrets.DOCKER_USERNAME }}/decentralized-ai-marketplace:latest -n quantum-trade  # Update the deployment image

